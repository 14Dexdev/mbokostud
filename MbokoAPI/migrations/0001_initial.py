# Generated by Django 4.2.7 on 2024-06-12 16:21

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('niveau', models.PositiveIntegerField()),
                ('Programme_objectif', models.FileField(upload_to='')),
                ('reussite', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Ensegnant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Moyen', models.PositiveIntegerField(null=True)),
                ('description', models.TextField()),
                ('Valeur', models.PositiveIntegerField(default=0)),
                ('Taux_de_reussite', models.PositiveIntegerField()),
                ('Taux_d_echec', models.PositiveIntegerField()),
                ('nombre_de_requete', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='GroupeMatiere',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Groupe', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Salles',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('classe', models.CharField(choices=[('TERMINAL D', 'Terminal D'), ('TERMINAL C', 'Terminal C'), ('TERMINAL A', 'TerminalA'), ('TERMINAL TI', 'Terminal TI'), ('PREMIERE D', 'Premiere D'), ('PREMIERE C', 'PremiereC'), ('PPREMIERE TI', 'Premiere TI'), ('SECONDE C', 'SecondeC'), ('SECONDE A', 'SecondeA'), ('TROSIEME', 'Troisieme'), ('QUATRIEME', 'Quatrieme'), ('CINQUIEME', 'Ciquieme'), ('SIXIEME', 'Sixieme'), ('COURS MOYENS DEUX', 'Cour Moyen Deux'), ('COURS MOYEN UN', 'Cour Moyen Un'), ('COURS ELEMENTAIRE DEUX', 'CourElementaire Deux')], max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Utilisateur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.TextField(choices=[('ENSEIGNANT', 'Repetiteur'), ('CLIENT', 'Abonnee')], max_length=20)),
                ('Photo', models.ImageField(null=True, upload_to='')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Date de creation du compte')),
                ('Quatier', models.TextField()),
                ('Ville', models.TextField(choices=[('DOUALA', 'Douala'), ('YAOUNDE', 'Yaounde'), ('BERTOUA', 'Bertoua'), ('EBOLOWA', 'Ebolowa'), ('BUEA', 'Buea'), ('LIMBE', 'Limbe'), ('BAFOUSSAM', 'Bafoussam'), ('DSCHANG', 'Dschand'), ('KRIBI', 'Kribi'), ('MBANGA', 'Mbanga'), ('EDEA', 'Edea'), ('TIKO', 'Tiko'), ('MAROUA', 'Maroua'), ('GAROUA', 'Garoua'), ('NGAOUNDERE', 'Ngaoundere'), ('SOUZA', 'Souza')], max_length=23)),
                ('age', models.PositiveSmallIntegerField()),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='requete',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('validation', models.BooleanField()),
                ('client', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='MbokoAPI.client')),
                ('repiteur', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='MbokoAPI.ensegnant')),
            ],
        ),
        migrations.CreateModel(
            name='repetiteur_client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reussite', models.BooleanField(null=True)),
                ('client', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='MbokoAPI.client')),
                ('ensegnant', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='MbokoAPI.ensegnant')),
            ],
        ),
        migrations.CreateModel(
            name='Objectif',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contenu', models.TextField()),
                ('users', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.IntegerField()),
                ('Nom_utilisateur', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='MbokoAPI.client')),
                ('nom_repetiteur', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='MbokoAPI.ensegnant')),
            ],
        ),
        migrations.CreateModel(
            name='Niveau_eleve',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('niveau', models.PositiveIntegerField()),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='MbokoAPI.client')),
            ],
        ),
        migrations.CreateModel(
            name='Messagerie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contenu', models.TextField()),
                ('date_envoi', models.DateTimeField(auto_now_add=True)),
                ('date_recepion', models.DateField(null=True)),
                ('messager', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Messagrie_messager', to=settings.AUTH_USER_MODEL)),
                ('recepteur', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Messagerie_recepteur', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Matiere',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_matiere', models.TextField()),
                ('GroupeMatiere', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='MbokoAPI.groupematiere')),
                ('classe', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='MbokoAPI.salles')),
            ],
        ),
        migrations.CreateModel(
            name='Livre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Nom_du_livre', models.TextField()),
                ('note', models.DecimalField(decimal_places=1, max_digits=5, max_length=5, null=True)),
                ('Auteur', models.TextField()),
                ('contenu', models.FileField(upload_to='')),
                ('Categorie', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='MbokoAPI.matiere')),
                ('classe', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='MbokoAPI.salles')),
            ],
        ),
        migrations.CreateModel(
            name='Liste_livre_ajoute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Id_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('livre_ajoute', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='MbokoAPI.livre')),
            ],
        ),
        migrations.AddField(
            model_name='ensegnant',
            name='User',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='ensegnant',
            name='classe_tenue',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='MbokoAPI.salles'),
        ),
        migrations.AddField(
            model_name='ensegnant',
            name='specialise',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='MbokoAPI.matiere'),
        ),
        migrations.CreateModel(
            name='Commentaire',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Contenu', models.TextField()),
                ('client', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='MbokoAPI.client')),
                ('livre', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='MbokoAPI.livre')),
                ('repetiteur', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='MbokoAPI.ensegnant')),
            ],
        ),
        migrations.AddField(
            model_name='client',
            name='Difficulete',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='MbokoAPI.matiere'),
        ),
        migrations.AddField(
            model_name='client',
            name='Objectif',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='MbokoAPI.objectif'),
        ),
        migrations.AddField(
            model_name='client',
            name='classe',
            field=models.ManyToManyField(to='MbokoAPI.salles'),
        ),
        migrations.AddField(
            model_name='client',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
    ]
